# npm i -g typescript typescript-language-server vscode-langservers-extracted @tailwindcss/language-server

[[language]]
name = "typescript"
formatter = { command = "prettierd", args = ["--stdin-filepath", "x.ts"] }
language-servers = [ "typescript-language-server", "eslint" ]
auto-format = true

[[language]]
name = "javascript"
formatter = { command = "prettierd", args = ["--stdin-filepath", "x.js"] }
auto-format = true

[[language]]
name = "tsx"
formatter = { command = "prettierd", args = ["--stdin-filepath", "x.tsx"] }
language-servers = [ "typescript-language-server", "tailwindcss-ls", "eslint" ]
auto-format = true
block-comment-tokens = ["{/*", "*/}"]

[[language]]
name = "json"
auto-format = false
# formatter = { command = "npx", args = ["prettier", "--parser", "json"] }

[[language]]
name = "python"
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true

[[language]]
name = "css"
auto-format = false

[language-server.biome]
command = "biome"
args = ["lsp-proxy"]

[language-server.deno-lsp]
command = "deno"
args = ["lsp"]
environment = { NO_COLOR = "1" }

[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
# format = true
nodePath = ""
# onIgnoredFiles = "off"
# packageManager = "yarn"
quiet = false
rulesCustomizations = []
run = "onType"
# useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
# codeActionOnSave = { mode = "all" }
experimental = {}
problems = { shortenToSingleLine = false }
# workingDirectory = { mode = "auto" }
