"$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

[user]
name = "David Crespo"
email = "crespo.dm@gmail.com"

[[--scope]]
--when.repositories = ["~/oxide"]
[--scope.user]
email = "david.crespo@oxidecomputer.com"

# Delta uses less by default but doesn't pass -X to it, which would the last
# page stick around after quit. I could use
#
#   pager = ["delta", "--pager", "less -FRX"]
#
# but I don't want this behavior on diffs, only the commit log, where I'm
# trying to look at a change ID. So instead what I've done is map Q to toggle
# --redraw-on-quit on before quitting. See ./lesskey.
# https://github.com/gwsw/less/issues/36#issuecomment-913200056

[ui]
pager = "delta"
default-command = "log"
diff-editor = ":builtin"
merge-editor = "vscode"
diff-formatter = ":git"

[git]
colocate = true

[revsets]
# default is 2 ancestors and I found it wasn't enough
log = "present(@) | ancestors(immutable_heads().., 4) | present(trunk())"

[revset-aliases]
'closest_bookmark(to)' = 'heads(::to & bookmarks())'
# Treat commits not authored by me as immutable. The `trunk().. &` bit is an
# optimization to scan for non-`mine()` commits only among commits that are not
# in `trunk()`.
# https://jj-vcs.github.io/jj/v0.26.0/config/#set-of-immutable-commits
"immutable_heads()" = "builtin_immutable_heads() | (trunk().. & ~mine())"

[aliases]
d = ["diff"]
dm = ["describe", "-m"]
dmp = ["describe", "-r", "@-", "-m"]
rp = ["log", "--no-graph", "-T", "commit_id"]
ds = ["diff", "--stat"]
cm = ["commit"]
tug = ["bookmark", "move", "--from", "closest_bookmark(@)", "--to", "@-"]

[template-aliases]
# Username part of the email address
'format_short_signature(signature)' = 'signature.email().local()'

# format_commit_summary_with_refs minus the git commit, and remove empty label
# color from description_placeholder
# https://github.com/jj-vcs/jj/blob/faa689a7/cli/src/config/templates.toml#L192C1
'zsh_prompt_summary(commit, refs)' = '''
separate(" ",
  format_short_change_id_with_hidden_and_divergent_info(commit),
  if(commit.conflict(), label("conflict", "(conflict)")),
  if(commit.empty(),
    label("empty", "(empty)"),
  ),
  if(commit.description(),
    commit.description().first_line(),
    label("description placeholder", "(no desc)")
  ),
)
'''
